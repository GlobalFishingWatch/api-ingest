var crypto = require('crypto');
var path = require('path');
var fs = require('fs');

const PRIVATE_KEY =
  'LS0tLS1CRUdJTiBSU0EgUFJJVkFURSBLRVktLS0tLQpNSUlHNHdJQkFBS0NBWUVBbS9YeVVmVDRYSGpDSEVnZVFxVUp6QmZnV2hlMUQ2ZWYyaEVhTDVYMitpdkoweEl2Cm53YlN0bWdLN0NtWHozeXY1a0lzNzkvSzRjWGgyc2RUNmdXcWp0ck1OcHZwN0pmaU8xQ3ZpNmkybnBYNnM1ZTYKampQT0p0MGt1bkIrTjVPNCsrVUR4dWI4R01IWUphQlAwckVtd1c4Mlk4SmMxSjhsVm40R2lLWmQrMkpkdjVUTwpMbi9qdFA0cnlVcjVvUHlNTUZ2VG5aNUhwRW45UDhTVE4zb2cvc283UzZNSmNrMGdKQlRjeDN0eExqZ1hqR1NXCkU1dVZVVzZDL2psRFlqOWl1VitobjQvQnB5SWFUZVRJQUNab0dlUUR3S0ZydkVXY0h2cTZMZTZKRFBtZTJudWYKQWNhbEVwbTJoaFprUXp4T0YrNlRBdFFnYjllbDc1bCtHTEdvZkYzVGJhTzh6ei9QVnJkb2NoYkJGVExneWhYdApYcUNVU3VvRVpENmdreWlXL2FBeGlYc2ZoK2FXUXU3SldNQVpMYk5lVG5QdzZpRWhKNWtXRDFZUXJycVd3R1F5CnlTVDExaktzc0dZWGN2WkRlNDExTjNCeE90eFJHbXRmSm5QSDdjeXBEU1FWOFhZOHJOd0xBMm84ZDdiWGxRLzgKeDlqY2h0dWZaNGJCSGp3bEFnTUJBQUVDZ2dHQVJuVHkxdkdyYmVNa0ZqRENjdXNxSk9pNGN4cjRzaXpRKzJ2MApmNERwUlpXWXBPRTNZRWx0MGZmb3owM3ZCazVYRE5maWd5OS84VVU3Um1IOFYrSGRicElMNWJQRUZ4MTZsNzlZCnZ1Z21NRGlqUEpVVU0zL1Y1eHJLcCt1QUtjMXpxV0NKdDBiTXBzYVR4bFBKRys3cUNrTWF1RENyVFdia01GSFkKMDgwTThpODdHUHk1dEtvVURjVXh0TXRKUU9BMjJQWHpBT2JyaUozZ2FmbDlaSGVwQmxJSVBhQlcrU3M4bFBCVAoyVTY4RDl4SlR5UjE1RC9LVWpKeHZUWFRha1FsdWZGQ0hBZkNpYXF0cllUKzludW1HaWZZVkVpK1MyR0w3a0MzCmFhMG9PcFRzY0tXd0h2dkl6Wm1WRmU1V3laZ2duRnlKU0NkcWtQMWxFOGV1bmVWNVJsQW0rbHZqQVpBZ05KNysKb2xvQnBtNHZ1L0w4cDltdSt1VWZQNmlYczMrTUt1aHJ6dFEvR2Q5RHpkbnhZd1lrTVBqL2gyZ05BdTNSdm5EcApiOEx3Q3FqQW85YjJrK3ZWWnpUVXpHRDNYdmt4QXVUaU1rMk5pbUZNbmp1ODBhUEFNTUl3WFVINnBKeGhmcWYwCk9rYWxBYm9WcmNVdUhUcHdGWVcwMTA2cXE1ZjFBb0hCQU14aDhpcGw1bDU4VE5pUzhlWXpPdHMra21JQjFEZEQKQmJnV2srTTh6SityWUV0OEtjTVl2WURxNENHaDhPL3kxTjNQaFBqNWIxRDhBZEVKNTVZUi84Vk9hSGhPTVpiOQphKzlPbWw1MVZwVHVoQ3N4UHlaUnd5c1dtVmg0M0NHMllCRVBRV053Z2lmeGlPOUFvTERWN0t0V1BVT0xwSnV1CjVkNEtFUlFLMGNZSE9xdjFVR2NmV1pLakxqZkFRZzl4NW1VT2FleFVvMGcrREZ0ZmVCTHdJUW9aZDBEKzBLRFgKMU93cnB3WkJGSmpPVndVcE9mZUc5VGo1OVdQY1orTXdsd0tCd1FERFdWc3hxMU51N0orNWhLeVg4V1AyVFBNRwpPb0lROXlVMkFhRDFMdDdaOHVzelRLN01xbi9wQnhIMFZLakw2R25rY3hGOXZSalRDMzJtTFNKZmFmWlB3V3hFCnFNWGJiYUhJWVJ0NExTVW15T1ZBemFoMmRPeUhiKzNZVmROSHFlSmZwL0RFM0ovQ29RMllDdVEraUxVZHJsd04KVzZoT2ROSGJaMmJhK0QxemdaOHdpL05aT1lvQ3RYN3RnQUcvRC9zQUJCam15dm8xMUdWenAxZVprUGdhUS9JOQp0UVY3QjdoU1NRbnFUYnA2dGVoTDh1KzRmbWVubmlYMm1KUjVsS01DZ2NFQWtRdVp2dmtlS2tQd2pXcUxmYUV4CnpkSjBORld6ODV2Ky9Rd1kzQldUNm1USExBcnI0R2M0WmJ0S1lOUDZsMjh3SGxKZHZndlhNaFFHZmdHWGR1dEQKSnhWa0VxejdpSHBGRlVvbFI0L2lhRU4xVE9uZ05TT2xiSGpYVHZCRzJTNENzMWl1UVJIaGJOTi9LTHdtemhpagpvMXpLa1pzU3NPSEloSEdFZVVMTWFNdE1taWk0Yk5iVXpMbzkzSmIyeXRzOGRNOXI0S3FZVG5hcWNsWW9jdGd6CnVtVWtPdDRiMVdvVzA1eVBKbU1kYU94VzJYVE9qSm9jZ2RqeWkzSXAwQlAxQW9IQU1ROWc2c0YzUzdWYmk5RDUKTTVPcElqTkRHWDVhS2Y2WHRzK0Q1KytrZ2lJUzFhaGRnZ01UNnFjZTZEald4NWNQK1JLNUF0WVp4Tzd1Mkd3ZgpaTTBNMGd6bXJ2dWY3VExFWGJtZGwzbm5DYTJNZmREb2pROWlVOFZWZTI1YWlIWHU1MDBiRjZXODdibGEyNk5vCm5SZmlQSmtNZjBKVXE1ZUZHTkFJTWRnRVB0ei82TVpORUV4MkQ2WWJRWFJUZS9OOGV3Mk1YM0g4a3NaTDBGYm4KbGlhbFdKdFYzQTk1VitPaGMvRHA3NUVqMHl1YU1uREpxWkQ5WVVoRGlvSFpVQXQzQW9IQWFIQWFNYjBxbk5ONwpKR2h3dnFPck5taGxVc0hPcStpNXVHQnBPZnJVd2c2SzdhTTk3Z0JKV1dqU1BVQnNFK3RrRlVMeS9TTGpGb3N5Cnlzb1FOclVQa2JFOStRTHREVlRkcWJpTGRwOG1yWVV4UE5qR1lLTTVFdlhtZ1NoU0FZejJRandWZC9wa2lCZTcKQzRGeG5rL1VRS2hheS9qMDVJLzRhd0pGdGFZR0xCaElNUUJuVnk4MWwxclkwbHE2M3BGNDhPbjJlOHBvVDRZLwpsV0xKZVNtRStmTnVITFprRXhYY0txc2xOWDNreStBSWQ1b3V3T1IzOGZiMWdZSHowSUo4Ci0tLS0tRU5EIFJTQSBQUklWQVRFIEtFWS0tLS0tCg==';
const PUBLIC_KEY =
  'LS0tLS1CRUdJTiBQVUJMSUMgS0VZLS0tLS0KTUlJQm9qQU5CZ2txaGtpRzl3MEJBUUVGQUFPQ0FZOEFNSUlCaWdLQ0FZRUFtL1h5VWZUNFhIakNIRWdlUXFVSgp6QmZnV2hlMUQ2ZWYyaEVhTDVYMitpdkoweEl2bndiU3RtZ0s3Q21YejN5djVrSXM3OS9LNGNYaDJzZFQ2Z1dxCmp0ck1OcHZwN0pmaU8xQ3ZpNmkybnBYNnM1ZTZqalBPSnQwa3VuQitONU80KytVRHh1YjhHTUhZSmFCUDByRW0Kd1c4Mlk4SmMxSjhsVm40R2lLWmQrMkpkdjVUT0xuL2p0UDRyeVVyNW9QeU1NRnZUblo1SHBFbjlQOFNUTjNvZwovc283UzZNSmNrMGdKQlRjeDN0eExqZ1hqR1NXRTV1VlVXNkMvamxEWWo5aXVWK2huNC9CcHlJYVRlVElBQ1pvCkdlUUR3S0ZydkVXY0h2cTZMZTZKRFBtZTJudWZBY2FsRXBtMmhoWmtRenhPRis2VEF0UWdiOWVsNzVsK0dMR28KZkYzVGJhTzh6ei9QVnJkb2NoYkJGVExneWhYdFhxQ1VTdW9FWkQ2Z2t5aVcvYUF4aVhzZmgrYVdRdTdKV01BWgpMYk5lVG5QdzZpRWhKNWtXRDFZUXJycVd3R1F5eVNUMTFqS3NzR1lYY3ZaRGU0MTFOM0J4T3R4UkdtdGZKblBICjdjeXBEU1FWOFhZOHJOd0xBMm84ZDdiWGxRLzh4OWpjaHR1Zlo0YkJIandsQWdNQkFBRT0KLS0tLS1FTkQgUFVCTElDIEtFWS0tLS0tCg==';

const publicKey = Buffer.from(PUBLIC_KEY, 'base64').toString('ascii');
const privateKey = Buffer.from(PRIVATE_KEY, 'base64').toString('ascii');
const encryptStringWithRsaPublicKey = function(obj) {
  const buffer = Buffer.from(JSON.stringify(obj));
  const encrypted = crypto.publicEncrypt(publicKey, buffer);
  return encrypted.toString('base64');
};

var decryptStringWithRsaPrivateKey = function(toDecrypt) {
  const buffer = Buffer.from(toDecrypt, 'base64');
  const decrypted = crypto.privateDecrypt(privateKey, buffer);
  return JSON.parse(decrypted.toString('utf8'));
};

const positions = {
  lat: 29.7845833333,
  lon: -31.9999666667,
  id: 'fb241dde-3aa0-4301-b190-05519428cf0b',
  timestamp: new Date().toISOString(),
  extraInfo: {
    test: 1,
  },
};
const msg = encryptStringWithRsaPublicKey(positions);
console.log(msg);
const now = Date.now();
const obj = decryptStringWithRsaPrivateKey(msg);
const after = Date.now();
console.log(after - now);
console.log({ now, after });
console.log(obj);
// console.log(obj);
